(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{463:function(t,r,e){t.exports=e.p+"assets/img/2951652613614_.pic.3877247c.jpg"},464:function(t,r,e){t.exports=e.p+"assets/img/2961652613619_.pic.15b70e9c.jpg"},465:function(t,r,e){t.exports=e.p+"assets/img/2971652613628_.pic.6ebb8eb0.jpg"},529:function(t,r,e){"use strict";e.r(r);var a=e(19),_=Object(a.a)({},(function(){var t=this,r=t._self._c;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"性能优化"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#性能优化"}},[t._v("#")]),t._v(" 性能优化")]),t._v(" "),r("h2",{attrs:{id:"进程"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#进程"}},[t._v("#")]),t._v(" 进程")]),t._v(" "),r("ul",[r("li",[t._v("浏览器进程： 输入地址，转换成http请求，输出到网络进程")]),t._v(" "),r("li",[t._v("GPU进程")]),t._v(" "),r("li",[t._v("网络进程： 发起请求，根据响应头，输出到对应进程")]),t._v(" "),r("li",[t._v("渲染进程： 执行js脚本，生成DOM树和CSS树等")]),t._v(" "),r("li",[t._v("插件进程")])]),t._v(" "),r("h3",{attrs:{id:"渲染进程"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#渲染进程"}},[t._v("#")]),t._v(" 渲染进程")]),t._v(" "),r("p",[r("img",{attrs:{src:e(463),alt:"image"}})]),t._v(" "),r("ul",[r("li",[r("strong",[t._v("GUI渲染线程：")]),t._v(" 解析HTML、CSS，构建 DOM 树和 RenderObject 树，布局和绘制等。当界面需要重绘（Repaint）或由于某种操作引发回流（Reflow）时，该线程就会执行。")]),t._v(" "),r("li",[r("strong",[t._v("JavaScript引擎线程：")]),t._v(" 主要负责解析 JavaScript 脚本并运行相关代码。 JavaScript 引擎在一个Tab页（Renderer 进程）中无论什么时候都只有一个 JavaScript 线程在运行 JavaScript 程序。需要提起一点就是，GUI线程与JavaScript引擎线程是互斥的，这也是就是为什么JavaScript操作时间过长，会造成页面渲染不连贯，导致页面出现阻塞的原理。")]),t._v(" "),r("li",[r("strong",[t._v("事件触发线程：")]),t._v(" 当一个事件被触发时该线程会把事件添加到待处理队列的队尾，等待 JavaScript 引擎的处理。 通常JavaScript引擎是单线程的，所以这些事件都会排队等待JS执行。")]),t._v(" "),r("li",[r("strong",[t._v("定时器触发器：")]),t._v(" 我们日常使用的setInterval 和 setTimeout 就在该线程中，原因可能就是：由于JS引擎是单线程的，如果处于阻塞线程状态就会影响记时的准确，所以需要通过单独的线程来记时并触发响应的事件这样子更为合理。")]),t._v(" "),r("li",[r("strong",[t._v("Http请求线程：")]),t._v(" 在 XMLHttpRequest 在连接后是通过浏览器新开一个线程请求，这个线程就Http请求线程，它 将检测到状态变更时，如果设置有回调函数，异步线程就产生状态变更事件放到 JavaScript 引擎的处理队列中等待处理。")])]),t._v(" "),r("h2",{attrs:{id:"概念"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#概念"}},[t._v("#")]),t._v(" 概念")]),t._v(" "),r("h3",{attrs:{id:"load-和-domcontentloaded-区别"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#load-和-domcontentloaded-区别"}},[t._v("#")]),t._v(" Load 和 DOMContentLoaded 区别")]),t._v(" "),r("ul",[r("li",[r("strong",[t._v("Load：")]),t._v(" 事件触发代表页面中的 DOM，CSS，JS，图片已经全部加载完毕。")]),t._v(" "),r("li",[r("strong",[t._v("DOMContentLoaded：")]),t._v(" 事件触发代表初始的 HTML 被完全加载和解析，不需要等待 CSS，JS，图片加载。")])]),t._v(" "),r("h3",{attrs:{id:"图层是什么"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#图层是什么"}},[t._v("#")]),t._v(" 图层是什么？")]),t._v(" "),r("p",[t._v("一般来说，可以把普通文档流看成一个图层。特定的属性可以生成一个新的图层。不同的图层渲染互不影响，所以对于某些频繁需要渲染的建议单独生成一个新图层，提高性能。但也不能生成过多的图层，会引起反作用。通过以下几个常用属性可以生成新图层")]),t._v(" "),r("ul",[r("li",[t._v("3D 变换：translate3d、translateZ")]),t._v(" "),r("li",[t._v("will-change")]),t._v(" "),r("li",[t._v("video、iframe 标签")]),t._v(" "),r("li",[t._v("通过动画实现的 opacity 动画转换")]),t._v(" "),r("li",[t._v("position: fixed")])]),t._v(" "),r("h3",{attrs:{id:"重绘-repaint-和回流-reflow"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#重绘-repaint-和回流-reflow"}},[t._v("#")]),t._v(" 重绘（Repaint）和回流（Reflow）")]),t._v(" "),r("ul",[r("li",[r("strong",[t._v("重绘：")]),t._v(" 是当节点需要更改外观而不会影响布局的，比如改变 color 就叫称为重绘")]),t._v(" "),r("li",[r("strong",[t._v("回流：")]),t._v(" 是布局或者几何属性需要改变就称为回流。")])]),t._v(" "),r("h3",{attrs:{id:"gc"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#gc"}},[t._v("#")]),t._v(" GC")]),t._v(" "),r("p",[t._v("垃圾回收机制（Garbage Collection），无法从GC根到达的对象，都将被GC回收。")]),t._v(" "),r("p",[t._v("GC根，指的是全局对象（window / document / 控制台）")]),t._v(" "),r("h2",{attrs:{id:"过程"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#过程"}},[t._v("#")]),t._v(" 过程")]),t._v(" "),r("h3",{attrs:{id:"浏览器静态资源缓存策略"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#浏览器静态资源缓存策略"}},[t._v("#")]),t._v(" 浏览器静态资源缓存策略")]),t._v(" "),r("p",[r("img",{attrs:{src:e(464),alt:"image"}})]),t._v(" "),r("h3",{attrs:{id:"http请求过程"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#http请求过程"}},[t._v("#")]),t._v(" HTTP请求过程")]),t._v(" "),r("ol",[r("li",[t._v("构建请求")]),t._v(" "),r("li",[t._v("查找缓存")]),t._v(" "),r("li",[t._v("HTTP请求： DNS -> 等待TCP队列 -> 建立TCP连接")]),t._v(" "),r("li",[t._v("HTTP响应")])]),t._v(" "),r("h3",{attrs:{id:"页面渲染过程"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#页面渲染过程"}},[t._v("#")]),t._v(" 页面渲染过程")]),t._v(" "),r("p",[r("img",{attrs:{src:e(465),alt:"image"}})]),t._v(" "),r("h2",{attrs:{id:"性能分析"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#性能分析"}},[t._v("#")]),t._v(" 性能分析")]),t._v(" "),r("ul",[r("li",[r("strong",[t._v("Page Speed：")]),t._v(" chrome拓展插件")]),t._v(" "),r("li",[t._v("lighthouse")]),t._v(" "),r("li",[t._v("Layers： chrome开发者工具菜单→more tools→Layers（开启渲染层功能模块）")]),t._v(" "),r("li",[t._v("Rendering： chrome开发者工具菜单→more tools→rendering（开启渲染性能监测工具）")])]),t._v(" "),r("h3",{attrs:{id:"性能指标"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#性能指标"}},[t._v("#")]),t._v(" 性能指标")]),t._v(" "),r("ul",[r("li",[t._v("FP： 首次绘制（First Paint），标记浏览器渲染任何在视觉上不同于导航前屏幕内容之内容的时间点")]),t._v(" "),r("li",[t._v("FCP： 首次内容绘制（First Contentful Paint），标记浏览器渲染来自 DOM 第一位内容的时间点，该内容可能是文本、图像、SVG 甚至 元素")]),t._v(" "),r("li",[t._v("LCP： 最大内容渲染（Largest Contentful Paint），代表在viewport中最大的页面元素加载的时间. LCP的数据会通过PerformanceEntry对象记录，每次出现更大的内容渲染，则会产生一个新的PerformanceEntry对象.")]),t._v(" "),r("li",[t._v("TBT： 总阻塞时长（Total Blocking Time），FCP到TTI间的时间，连续占用主线程的时间，是导致动画卡顿的罪魁祸首")]),t._v(" "),r("li",[t._v("LCP： 最大内容绘制（Largest Contentful Paint），从输入URL到页面内容加载完的时间")])]),t._v(" "),r("h3",{attrs:{id:"页面加载过程"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#页面加载过程"}},[t._v("#")]),t._v(" 页面加载过程")]),t._v(" "),r("p",[r("img",{attrs:{src:"evernotecid://56CF36E1-12D1-4A55-B84F-B1B10BD7B8DD/appyinxiangcom/23743638/ENResource/p414",alt:"2cad21c30908b7a90dbca02243b57bda.png"}})]),t._v(" "),r("h2",{attrs:{id:"优化策略"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#优化策略"}},[t._v("#")]),t._v(" 优化策略")]),t._v(" "),r("h3",{attrs:{id:"静态资源打包优化"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#静态资源打包优化"}},[t._v("#")]),t._v(" 静态资源打包优化")]),t._v(" "),r("ul",[r("li",[t._v("提取公共文件")]),t._v(" "),r("li",[t._v("代码体积压缩")]),t._v(" "),r("li",[t._v("treeshake")]),t._v(" "),r("li",[t._v("模块联邦 ModuleFederationPlugin")])]),t._v(" "),r("h3",{attrs:{id:"图片资源优化"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#图片资源优化"}},[t._v("#")]),t._v(" 图片资源优化")]),t._v(" "),r("ul",[r("li",[t._v("图片尺寸裁剪")]),t._v(" "),r("li",[t._v("雪碧图/使用字体图标")]),t._v(" "),r("li",[t._v("使用WebP格式图片")])]),t._v(" "),r("h3",{attrs:{id:"请求优化"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#请求优化"}},[t._v("#")]),t._v(" 请求优化")]),t._v(" "),r("ul",[r("li",[t._v("减少请求")]),t._v(" "),r("li",[t._v("数据缓存")]),t._v(" "),r("li",[t._v("服务端渲染")]),t._v(" "),r("li",[t._v("微前端")]),t._v(" "),r("li",[t._v("加载顺序优化（prefetch： 预请求，闲时加载、preload： 预加载，与主模块并行加载）")])]),t._v(" "),r("h3",{attrs:{id:"网络优化"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#网络优化"}},[t._v("#")]),t._v(" 网络优化")]),t._v(" "),r("ul",[r("li",[t._v("gzip")]),t._v(" "),r("li",[t._v("cdn")]),t._v(" "),r("li",[t._v("负载均衡")]),t._v(" "),r("li",[t._v("http2")]),t._v(" "),r("li",[t._v("PWA")])]),t._v(" "),r("h3",{attrs:{id:"处理速度优化"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#处理速度优化"}},[t._v("#")]),t._v(" 处理速度优化")]),t._v(" "),r("p",[t._v("JS引擎线程和GUI渲染线程会相互阻塞，为了防止阻塞，可以将高耗时的js运算，放到worker去")]),t._v(" "),r("ul",[r("li",[t._v("service worker 主要用于应用离线缓存")]),t._v(" "),r("li",[t._v("web worker 主要用于应用运算")]),t._v(" "),r("li",[t._v("webassembly")])]),t._v(" "),r("h3",{attrs:{id:"首屏加载速度优化"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#首屏加载速度优化"}},[t._v("#")]),t._v(" 首屏加载速度优化")]),t._v(" "),r("ul",[r("li",[t._v("骨架屏： 防止阻塞在入口文件太久，从而可并发加载各子模块")])]),t._v(" "),r("h2",{attrs:{id:"参考文献"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#参考文献"}},[t._v("#")]),t._v(" 参考文献")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://juejin.im/post/6846687590540640263",target:"_blank",rel:"noopener noreferrer"}},[t._v("浏览器工作原理：浏览器组成&网络请求篇"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://juejin.im/post/6847902222349500430",target:"_blank",rel:"noopener noreferrer"}},[t._v("浏览器工作原理：渲染流程篇"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://juejin.im/post/6844903648355418120",target:"_blank",rel:"noopener noreferrer"}},[t._v("前端性能与异常上报"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://juejin.im/post/6844903613790175240",target:"_blank",rel:"noopener noreferrer"}},[t._v("网站性能优化实战"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://juejin.im/post/6844903545016156174",target:"_blank",rel:"noopener noreferrer"}},[t._v("浏览器页面资源加载过程与优化"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://webpack.js.org/api/module-methods/#magic-comments",target:"_blank",rel:"noopener noreferrer"}},[t._v("webpack magic comments"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://liuxuan.blog.csdn.net/article/details/104237256",target:"_blank",rel:"noopener noreferrer"}},[t._v("Chrome Performance常见名词解释(FP, FCP, LCP, DCL, FMP, TTI, TBT, FID, CLS)"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2018/07/web-worker.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Web Worker 使用教程"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://www.jianshu.com/p/47e3c40b8410",target:"_blank",rel:"noopener noreferrer"}},[t._v("Microtasks 与 Macrotasks"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"http://qingbob.com/dashboard-optimize/",target:"_blank",rel:"noopener noreferrer"}},[t._v("仪表盘场景前端优化经验谈"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://www.imooc.com/article/13489",target:"_blank",rel:"noopener noreferrer"}},[t._v("JavaScript内存管理和优化"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://www.sohu.com/a/150902639_505818",target:"_blank",rel:"noopener noreferrer"}},[t._v("前端性能优化之 Performance 神器"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://www.infoq.cn/article/dxa8am44oz*lukk5ufhy",target:"_blank",rel:"noopener noreferrer"}},[t._v("蚂蚁金服如何把前端性能监控做到极致?"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://blog.csdn.net/sinat_17775997/article/details/107491675",target:"_blank",rel:"noopener noreferrer"}},[t._v("腾讯前端团队是如何做web性能监控的?"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://developers.google.com/web/tools/chrome-devtools/memory-problems?hl=zh-cn",target:"_blank",rel:"noopener noreferrer"}},[t._v("Chrome DevTools Memory"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://segmentfault.com/a/1190000020277827",target:"_blank",rel:"noopener noreferrer"}},[t._v("前端内存泄露浅析"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://www.cnblogs.com/xiaohuochai/archive/2017/03/09/6523397.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("performance对象介绍"),r("OutboundLink")],1)])])])}),[],!1,null,null,null);r.default=_.exports}}]);